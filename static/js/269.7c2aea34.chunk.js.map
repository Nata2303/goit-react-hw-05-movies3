{"version":3,"file":"static/js/269.7c2aea34.chunk.js","mappings":"8KAEMA,EAAS,mCAETC,EAAM,CACVC,kBAAkB,WAAD,wBAAE,sGAETC,EAFS,kEAE2DH,GAF3D,SAGQI,EAAAA,EAAAA,IAAUD,GAHlB,cAGTE,EAHS,yBAIRA,EAASC,MAJD,uCAMfC,QAAQC,MAAM,kCAAd,MANe,kBAOR,IAPQ,yDAAF,kDAAC,GAWlBC,aAAa,WAAD,wBAAE,WAAMC,GAAN,yFAEJP,EAFI,4DAE0DH,EAF1D,kBAE0EU,GAF1E,SAGaN,EAAAA,EAAAA,IAAUD,GAHvB,cAGJE,EAHI,yBAIHA,EAASC,MAJN,uCAMVC,QAAQC,MAAM,0BAAd,MANU,kBAOH,IAPG,yDAAF,mDAAC,GAWbG,gBAAgB,WAAD,wBAAE,WAAMC,GAAN,yFAEPT,EAFO,6CAEwCS,EAFxC,oBAE2DZ,GAF3D,SAGUI,EAAAA,EAAAA,IAAUD,GAHpB,cAGPE,EAHO,yBAINA,EAASC,MAJH,uCAMbC,QAAQC,MAAM,gCAAd,MANa,kBAON,MAPM,yDAAF,mDAAC,GAWhBK,gBAAgB,WAAD,wBAAE,WAAMD,GAAN,yFAEPT,EAFO,6CAEwCS,EAFxC,4BAEmEZ,GAFnE,SAGUI,EAAAA,EAAAA,IAAUD,GAHpB,cAGPE,EAHO,yBAINA,EAASC,MAJH,uCAMbC,QAAQC,MAAM,gCAAd,MANa,kBAON,IAPM,yDAAF,mDAAC,GAWhBM,gBAAgB,WAAD,wBAAE,WAAMF,GAAN,yFAEPT,EAFO,6CAEwCS,EAFxC,4BAEmEZ,GAFnE,SAGUI,EAAAA,EAAAA,IAAUD,GAHpB,cAGPE,EAHO,yBAINA,EAASC,MAJH,uCAMbC,QAAQC,MAAM,gCAAd,MANa,kBAON,IAPM,yDAAF,mDAAC,IAYlB,K,8IC5DA,EAAwB,sBAAxB,EAAuD,uB,SCkEvD,EA9De,WACb,IAAMO,GAAWC,EAAAA,EAAAA,MACjB,GAAsCC,EAAAA,EAAAA,UAAS,IAA/C,eAAOC,EAAP,KAAoBC,EAApB,KACA,GAA0CF,EAAAA,EAAAA,UAAS,IAAnD,eAAOG,EAAP,KAAsBC,EAAtB,KAGMZ,GAAea,EAAAA,EAAAA,aAAW,mCAAC,WAAMZ,GAAN,gGAEVT,EAAAA,EAAAA,aAAiBS,GAFP,OAEvBJ,EAFuB,OAG7Be,EAAiBf,EAAKiB,SAHO,gDAK7BhB,QAAQC,MAAM,0BAAd,MACAa,EAAiB,IANY,yDAAD,sDAQ7B,IAEGG,GAAqBF,EAAAA,EAAAA,cACzB,SAAAG,GACEA,EAAMC,iBACNjB,EAAaS,GACbH,EAAS,UAAD,OAAWG,GACpB,GACD,CAACA,EAAaH,EAAUN,IAa1B,OAXAkB,EAAAA,EAAAA,YACE,WACE,IACMjB,EADc,IAAIkB,gBAAgBC,OAAOC,SAASC,QAC9BC,IAAI,SAC1BtB,IACFS,EAAeT,GACfD,EAAaC,GAEhB,GACD,CAACD,KAGD,4BACE,2CACA,kBAAMwB,SAAUT,EAAhB,WACE,kBACEU,KAAK,OACLC,MAAOjB,EACPkB,SAAU,SAAAX,GAAK,OAAIN,EAAeM,EAAMY,OAAOF,MAAhC,EACfG,YAAY,0BAEd,mBAAQC,UAAWC,EAAYN,KAAK,SAApC,wBAMF,wBACGd,EAAcqB,KAAI,SAAAC,GAAK,OACtB,eAAIH,UAAWC,EAAf,UACE,SAAC,KAAD,CAAMG,GAAE,kBAAaD,EAAME,IAA3B,SAAkCF,EAAMG,SADXH,EAAME,GADf,QAQ/B,C","sources":["Api.jsx","webpack://react-homework-template/./src/components/Movies/movies.module.css?968c","components/Movies/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst apiKey = '7f4ba582d55c3d33bf97672c5d45e075';\n\nconst Api = {\n  getTrendingMovies: async () => {\n    try {\n      const apiUrl = `https://api.themoviedb.org/3/trending/movie/day?api_key=${apiKey}`;\n      const response = await axios.get(apiUrl);\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching trending movies:', error);\n      return [];\n    }\n  },\n\n  searchMovies: async query => {\n    try {\n      const apiUrl = `https://api.themoviedb.org/3/search/movie?api_key=${apiKey}&query=${query}`;\n      const response = await axios.get(apiUrl);\n      return response.data;\n    } catch (error) {\n      console.error('Error searching movies:', error);\n      return [];\n    }\n  },\n\n  getMovieDetails: async movieId => {\n    try {\n      const apiUrl = `https://api.themoviedb.org/3/movie/${movieId}?api_key=${apiKey}`;\n      const response = await axios.get(apiUrl);\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching movie details:', error);\n      return null;\n    }\n  },\n\n  getMovieCredits: async movieId => {\n    try {\n      const apiUrl = `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${apiKey}`;\n      const response = await axios.get(apiUrl);\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching movie credits:', error);\n      return [];\n    }\n  },\n\n  getMovieReviews: async movieId => {\n    try {\n      const apiUrl = `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=${apiKey}`;\n      const response = await axios.get(apiUrl);\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching movie reviews:', error);\n      return [];\n    }\n  },\n};\n\nexport default Api;\n","// extracted by mini-css-extract-plugin\nexport default {\"movie\":\"movies_movie__1jlAK\",\"search\":\"movies_search__hkYQ7\"};","import React, { useState, useEffect, useCallback } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport Api from '../../Api';\nimport css from './movies.module.css';\n\nconst Movies = () => {\n  const navigate = useNavigate();\n  const [searchQuery, setSearchQuery] = useState('');\n  const [searchResults, setSearchResults] = useState([]);\n\n\n  const searchMovies = useCallback(async query => {\n    try {\n      const data = await Api.searchMovies(query);\n      setSearchResults(data.results);\n    } catch (error) {\n      console.error('Error searching movies:', error);\n      setSearchResults([]);\n    }\n  }, []);\n\n  const handleSearchSubmit = useCallback(\n    event => {\n      event.preventDefault();\n      searchMovies(searchQuery);\n      navigate(`?query=${searchQuery}`);\n    },\n    [searchQuery, navigate, searchMovies]\n  );\n  useEffect(\n    () => {\n      const queryParams = new URLSearchParams(window.location.search);\n      const query = queryParams.get('query');\n      if (query) {\n        setSearchQuery(query);\n        searchMovies(query);\n      }\n    },\n    [searchMovies]\n  );\n  return (\n    <div>\n      <h1>Search Movies</h1>\n      <form onSubmit={handleSearchSubmit}>\n        <input\n          type=\"text\"\n          value={searchQuery}\n          onChange={event => setSearchQuery(event.target.value)}\n          placeholder=\"Enter movie title...\"\n        />\n        <button className={css.search} type=\"submit\">\n          Search\n        </button>\n      </form>\n\n      {/* Display search results */}\n      <ul>\n        {searchResults.map(movie => (\n          <li className={css.movie} key={movie.id}>\n            <Link to={`/movies/${movie.id}`}>{movie.title}</Link>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Movies;\n"],"names":["apiKey","Api","getTrendingMovies","apiUrl","axios","response","data","console","error","searchMovies","query","getMovieDetails","movieId","getMovieCredits","getMovieReviews","navigate","useNavigate","useState","searchQuery","setSearchQuery","searchResults","setSearchResults","useCallback","results","handleSearchSubmit","event","preventDefault","useEffect","URLSearchParams","window","location","search","get","onSubmit","type","value","onChange","target","placeholder","className","css","map","movie","to","id","title"],"sourceRoot":""}